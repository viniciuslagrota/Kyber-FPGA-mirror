/*
 * test_kem.c

 *
 *  Created on: 5 de fev de 2021
 *      Author: vinicius
 */

#include "test_kem.h"
#include "kem.h"
#include "randombytes.h"
//#include "ds_benchmark.h"


int kem_test(const char *name, int iterations)
{
	//init keys
	uint8_t pk[CRYPTO_PUBLICKEYBYTES];
	uint8_t sk[CRYPTO_SECRETKEYBYTES];
	uint8_t ct[CRYPTO_CIPHERTEXTBYTES];
	uint8_t key_a[CRYPTO_BYTES];
	uint8_t key_b[CRYPTO_BYTES];

	print_debug(DEBUG_TEST_KEM, "\n");
	print_debug(DEBUG_TEST_KEM, "=============================================================================================================================\n");
	print_debug(DEBUG_TEST_KEM, "Testing correctness of key encapsulation mechanism (KEM), system %s, tests for %d iterations\n", name, iterations);
	print_debug(DEBUG_TEST_KEM, "=============================================================================================================================\n");

	crypto_kem_keypair(pk, sk);
	crypto_kem_enc(ct, key_b, pk);
	crypto_kem_dec(key_a, ct, sk);

	if (memcmp(key_b, key_a, CRYPTO_BYTES) != 0) {
		print_debug(DEBUG_ERROR, "[TEST_KEM] Shared keys ERROR!\n");
		return false;
	}

	//Test random:
//	uint8_t ui8Random[16] = {0};
//	print_debug(DEBUG_TEST_KEM, "Random number: 0x");
//	randombytes(ui8Random, 32);
//	for(int i = 0; i < 16; i++)
//		print_debug(DEBUG_TEST_KEM, "%02x", ui8Random[i]);
//	print_debug(DEBUG_TEST_KEM, "\n");
	return true;
}
